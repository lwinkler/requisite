!Design
id: design-requisite
name: The design statement of requisite
children:

# Definitions
- &yaml_format !Definition
  id: yaml-format
  text: The YAML format, used for input and output.

- !Definition
  id: design
  text: The specific design of a product, it contains the definitions, requirements, ...

- &design_parts !Definition
  id: statement
  name: Statement
  text: "The different parts of a design: requirements, definitions, tests, ..."
  children:
  - !Definition
    id: definition
    name: Definition
  - !Definition
    id: requirement
    name: Requirement
  - !Definition
    id: test
    name: Test
  - !Definition
    id: test-list
    name: Test list

# Requirements
- !Requirement
  id: req-design-review
  text: A *design can be commited and reviewed as source code.

- !Requirement
  id: req-input-design
  text: A *design can be read from the *yaml-format

- !Requirement
  id: req-output-requirements
  text: All requirements can be written as output

- !Requirement
  id: req-output-tests
  text: All tests matching a design can be written as output

- !Requirement
  id: req-extract-tests
  text: Links between tests and requirements can be extracted from the sources of the tests (if properly annotated)

- !Requirement
  id: req-design-validity
  text: The validity of a design can be checked according to rules


# Test lists
- !TestList
  id: tests-system
  name: System tests
  children:

  - !Test
    id: test-design-review
    # labels: non-functional
    text: Verify that a design can be reviewed manually
    requirement: req-design-review

- !TestListFromDoxygen
  id: tests-unit
  name: Unit tests
  path: test/doxygen_tests
